{"Details": {"Properties": {"Name": "x_greyenergyapt_x_greyenergyimplant2018.bin", "md5": "815a60e33e51b713bd37431c98d34bc5", "sha1": "3025953bde07e0683a94a05771e2635b6109d9d3", "sha256": "1b17ce735512f3104557afe3becacd05ac802b2af79dab5bb1a7ac8d10dccffd", "ssdeep": "48:KAnOmNvkCzeh5I4H5NkIsAWr8LvAcpVlLmyJKhJEub0bhgJT2:KZgvjzahH5GJr8JlLrJuT2aJT", "size": "13.00KB", "bytes": "13312", "mime": "application/x-dosexec", "extension": "application/octet-stream", "Entropy": "2.0738314890387857 (Minimum: 0.0, Maximum: 8.0)"}}, "Location": {"Original": "/analyzer/folders/malware/x_GreyEnergyAPT_x_GreyEnergyImplant2018.bin", "File": "/analyzer/folders/output/30cceee0-15dd-4a1f-8308-bcd7d5462fc0_815a60e33e51b713bd37431c98d34bc5/temp", "html": "/analyzer/folders/output/30cceee0-15dd-4a1f-8308-bcd7d5462fc0_815a60e33e51b713bd37431c98d34bc5/x_GreyEnergyAPT_x_GreyEnergyImplant2018.bin.html", "json": "/analyzer/folders/output/30cceee0-15dd-4a1f-8308-bcd7d5462fc0_815a60e33e51b713bd37431c98d34bc5/x_GreyEnergyAPT_x_GreyEnergyImplant2018.bin.json", "Folder": "/analyzer/folders/output/30cceee0-15dd-4a1f-8308-bcd7d5462fc0_815a60e33e51b713bd37431c98d34bc5/temp_unpacked"}, "Encoding": {"Details": {"charset": "binary", "ForceEncoding": "utf-8", "ByteOrderMark": "None"}}, "PE": {"General": {"PE Type": "exe", "Entrypoint": "4096", "Entrypoint Section": ".text", "Header checksum": "0x0", "Verify checksum": "0xc1f3", "Match checksum": "False", "Sig": "eb048b2c24c3e8f7ffffff68", "imphash": "f73d098ba05eba6e3d639538e7faa89f", "warning": ["Byte 0x00 makes up 82.0312% of the file's contents. This may indicate truncation / malformation.", "Suspicious flags set for section 0. Both IMAGE_SCN_MEM_WRITE and IMAGE_SCN_MEM_EXECUTE are set. This might indicate a packed executable."], "Timestamp": "1969-12-31 16:00:00"}, "Characteristics": {"High Entropy": "False", "aslr": "False", "Force Integrity": "False", "dep": "False", "seh": "True", "No Bind": "False", "cfg": "False", "No Isolation": "False", "App Container": "False", "wdm Driver": "False"}, "Sections": [{"Section": ".text", "Suspicious": "No", "Size": "8192", "MD5": "a5846cca915a259815cd14ff8ff99769", "Entropy": "2.871499261298506 (Minimum: 0.0, Maximum: 8.0)", "Description": "code section"}, {"Section": ".data", "Suspicious": "No", "Size": "1024", "MD5": "0d82fedae4ad561f237a56c2b62b7571", "Entropy": "1.6204011082371252 (Minimum: 0.0, Maximum: 8.0)", "Description": "data section"}], "Dlls": [{"Dll": "kernel32.dll", "Description": "windows nt base api client dll"}, {"Dll": "user32.dll", "Description": "multi-user windows user api client dll"}, {"Dll": "advapi32.dll", "Description": "advanced windows 32 base api"}], "Imported functions": [{"Dll": "kernel32.dll", "Function": "LocalFree", "Description": "frees the specified local memory object and invalidates its handle.notethe local functions have greater overhead and provide fewer features than other memory management functions. new applications should use the heap functions unless documentation states that a local function should be used. for more information, see global and local functions."}, {"Dll": "kernel32.dll", "Function": "UnhandledExceptionFilter", "Description": "an application-defined function that passes unhandled exceptions to the debugger, if the process is being debugged. otherwise, it optionally displays an application error message box and causes the exception handler to be executed. this function can be called only from within the filter expression of an exception handler."}, {"Dll": "kernel32.dll", "Function": "IsDebuggerPresent", "Description": "determines whether the calling process is being debugged by a user-mode debugger."}, {"Dll": "kernel32.dll", "Function": "GetLastError", "Description": "retrieves the calling thread's last-error code value. the last-error code is maintained on a per-thread basis. multiple threads do not overwrite each other's last-error code.visual basic:applications should call err.lastdllerror instead ofgetlasterror."}, {"Dll": "kernel32.dll", "Function": "lstrlenA", "Description": "determines the length of the specified string (not including the terminating null character)."}, {"Dll": "user32.dll", "Function": "MessageBoxA", "Description": "displays a modal dialog box that contains a system icon, a set of buttons, and a brief application-specific message, such as status or error information. the message box returns an integer value that indicates which button the user clicked."}, {"Dll": "advapi32.dll", "Function": "RevertToSelf", "Description": "the reverttoself function terminates the impersonation of a client application."}]}, "Behavior": {"Intell": [{"Matched": "1", "Required": "1", "Behavior": "Debugger detection", "Detected": "isdebuggerpresent"}]}, "Language": {"UnKnown": [{"Count": "Unavailable", "Word": "*\\,c"}, {"Count": "Unavailable", "Word": ".text"}, {"Count": "Unavailable", "Word": "qj@h"}, {"Count": "Unavailable", "Word": "y%}["}, {"Count": "Unavailable", "Word": "reverttoself"}, {"Count": "Unavailable", "Word": "fjy&"}, {"Count": "Unavailable", "Word": "advapi32.dll"}, {"Count": "Unavailable", "Word": "=e%pk/y"}, {"Count": "Unavailable", "Word": "p`7w.="}, {"Count": "Unavailable", "Word": "dcbadcbadcba"}, {"Count": "Unavailable", "Word": "kernel32.dll"}, {"Count": "Unavailable", "Word": "getlasterror"}, {"Count": "Unavailable", "Word": "\"eqrqn"}, {"Count": "Unavailable", "Word": "yhb6"}, {"Count": "Unavailable", "Word": "')wy"}, {"Count": "Unavailable", "Word": "uyq(w"}, {"Count": "Unavailable", "Word": ".scx;"}, {"Count": "Unavailable", "Word": "r5:g"}, {"Count": "Unavailable", "Word": "user32.dll"}, {"Count": "Unavailable", "Word": "t ffff"}, {"Count": "Unavailable", "Word": ",5#;"}, {"Count": "Unavailable", "Word": "lstrlena"}, {"Count": "Unavailable", "Word": "8^xf3"}, {"Count": "Unavailable", "Word": "x83;"}, {"Count": "Unavailable", "Word": ">h:)"}, {"Count": "Unavailable", "Word": "isdebuggerpresent"}, {"Count": "Unavailable", "Word": "6j@w"}, {"Count": "Unavailable", "Word": "pffff"}, {"Count": "Unavailable", "Word": "localfree"}, {"Count": "Unavailable", "Word": "messageboxa"}, {"Count": "Unavailable", "Word": ".data"}, {"Count": "Unavailable", "Word": "r,b6"}, {"Count": "Unavailable", "Word": ")dw!e"}, {"Count": "Unavailable", "Word": "-'z\\8"}, {"Count": "Unavailable", "Word": "unhandledexceptionfilter"}, {"Count": "Unavailable", "Word": "'u<y"}, {"Count": "Unavailable", "Word": "r/>vg"}, {"Count": "Unavailable", "Word": "mk9|"}]}, "Patterns": {"HEX": [{"Count": "2", "HEX": "ffff", "Parsed": ""}, {"Count": "1", "HEX": "dcbadcbadcba", "Parsed": "\u073a\u073a\u073a"}]}, "Creds": {"Logins": [{"Count": "1", "UserPass": "user32.dll\n"}]}, "QBDETECT": {"Detection": [{"Count": "1", "Offset": "Unavailable", "Rule": "API Alert", "Match": "unhandledexceptionfilter", "Parsed": "None"}, {"Count": "1", "Offset": "Unavailable", "Rule": "API Alert", "Match": "isdebuggerpresent", "Parsed": "None"}]}, "MITRE": {"Attack": [{"Id": "t1183", "Name": "Image File Execution Options Injection", "Detected": "debugger", "Description": "Image File Execution Options (IFEO) enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., \u201cC:\\dbg\\ntsd.exe -g  notepad.exe\u201d). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code><executable></code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IEFO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nAn example where the evil.exe process is started when notepad.exe exits: (Citation: Oddvar Moe IFEO APR 2018)\n\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1</code>\n* <code>reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\notepad.exe\" /v MonitorProcess /d \"C:\\temp\\evil.exe\"</code>\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may be abused to obtain persistence and privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Endgame Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous invocation.\n\nMalware may also use IFEO for Defense Evasion by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)"}]}, "Yara": {"Matches": [{"Count": "0", "Offset": "0x160", "Rule": "Data_Section_Detecton_1", "Patteren": ".data", "Parsed": "None", "Condition": "uint16(0) == 0x5a4d and uint32be(uint32(0x3c)) == 0x50450000 and (for any of them : ( $ in (0..1024) ))"}, {"Count": "0", "Offset": "0x138", "Rule": "Code_Section_Detecton_2", "Patteren": ".text", "Parsed": "None", "Condition": "uint16(0) == 0x5a4d and uint32be(uint32(0x3c)) == 0x50450000 and (for any of them : ( $ in (0..1024) ))"}, {"Count": "0", "Offset": "0x3257", "Rule": "Top1000Passwords", "Patteren": "Free", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x3068", "Rule": "Advanced_Windows_32_Base_API_Detection_1", "Patteren": "advapi32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x306b", "Rule": "EDIABAS_Server_Interface_for_Win32_Detection_1", "Patteren": "api32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x3050", "Rule": "Windows_NT_BASE_API_Client_DLL_Detection_1", "Patteren": "kernel32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x305d", "Rule": "Multi_User_Windows_USER_API_Client_DLL_Detection_1", "Patteren": "user32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x0", "Rule": "Windows_DOS_executable_file_EXE", "Patteren": "MZ", "Parsed": "None", "Condition": "$1 at 0"}, {"Count": "0", "Offset": "0x304f", "Rule": "Path", "Patteren": "\u0000kernel32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x305c", "Rule": "Path", "Patteren": "\u0000user32.dll", "Parsed": "None", "Condition": "any of them"}, {"Count": "0", "Offset": "0x3067", "Rule": "Path", "Patteren": "\u0000advapi32.dll", "Parsed": "None", "Condition": "any of them"}], "Tags": [{"fullrule": "packers_index:IsPE32", "namespace": "packers_index", "color": "brown_color", "rule": "IsPE32", "meta": ""}, {"fullrule": "packers_index:IsWindowsGUI", "namespace": "packers_index", "color": "brown_color", "rule": "IsWindowsGUI", "meta": ""}, {"fullrule": "packers_index:HasModified_DOS_Message", "namespace": "packers_index", "color": "brown_color", "rule": "HasModified_DOS_Message", "meta": "author: _pusher_\ndescription: DOS Message Check\ndate: 2016-07"}, {"fullrule": "antidebug_antivm_index:anti_dbg", "namespace": "antidebug_antivm_index", "color": "light_blue_color", "rule": "anti_dbg", "meta": "author: x0r\ndescription: Checks if being debugged\nversion: 0.2"}]}}